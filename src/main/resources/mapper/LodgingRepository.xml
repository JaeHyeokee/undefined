<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.LodgingRepository">

    <!--    숙소 리스트 쿼리   -->
    <select id="findLodgingsByLocation" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_name AS lodgingName,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_type AS lodgingType,
               MIN(r.room_price) AS roomPrice
        FROM lodging l
                 JOIN room r
                      ON l.lodging_id = r.lodging_id
        WHERE l.lodging_location1  LIKE CONCAT('%', #{location}, '%')
           OR l.lodging_location2  LIKE CONCAT('%', #{location}, '%')
        GROUP BY l.lodging_id, l.lodging_name, l.lodging_picture_1, l.lodging_type;
    </select>

    <!-- location 과 type 으로 필터링하는 쿼리 -->
    <select id="findLodgingsByLocationAndType" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_name AS lodgingName,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_type AS lodgingType,
               MIN(r.room_price) AS roomPrice
        FROM lodging l
                 JOIN room r ON l.lodging_id = r.lodging_id
        WHERE (l.lodging_location1 LIKE CONCAT('%', #{location}, '%')
            OR l.lodging_location2 LIKE CONCAT('%', #{location}, '%'))
          AND (#{type} = '전체' OR l.lodging_type = #{type})
        GROUP BY l.lodging_id, l.lodging_name, l.lodging_picture_1, l.lodging_type;
    </select>

    <select id="findLodgingByPriceASC" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_name AS lodgingName,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_type AS lodgingType,
               MIN(r.room_price) AS roomPrice
        FROM lodging l
                 JOIN room r ON l.lodging_id = r.lodging_id
        WHERE l.lodging_location1  LIKE CONCAT('%', #{location}, '%')
           OR l.lodging_location2  LIKE CONCAT('%', #{location}, '%')
        GROUP BY l.lodging_id, l.lodging_name, l.lodging_picture_1, l.lodging_type
        ORDER BY roomPrice ASC
    </select>
    <select id="findLodgingByPriceDESC" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_name AS lodgingName,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_type AS lodgingType,
               MIN(r.room_price) AS roomPrice
        FROM lodging l
                 JOIN room r ON l.lodging_id = r.lodging_id
        WHERE l.lodging_location1  LIKE CONCAT('%', #{location}, '%')
           OR l.lodging_location2  LIKE CONCAT('%', #{location}, '%')
        GROUP BY l.lodging_id, l.lodging_name, l.lodging_picture_1, l.lodging_type
        ORDER BY roomPrice DESC
    </select>

    <!--    숙소 상세    -->
    <select id="findLodgingById" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_name AS lodgingName,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_open AS lodgingOpen,
               l.lodging_close AS lodgingClose,
               l.lodging_address AS lodgingAddress,
               r.room_picture_1 AS roomPicture1,
               r.room_name AS roomName,
               r.room_price AS roomPrices,
               r.room_id AS roomId
        FROM lodging l
                 JOIN room r
                      ON l.lodging_id = r.lodging_id
        WHERE l.lodging_id = #{lodgingId}
    </select>

    <!--    숙소 상세 1개만 뽑아올 것들    -->
    <select id="findLodgingByName" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_name AS lodgingName,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_introduce AS lodgingIntroduce,
               l.lodging_service AS lodgingService,
               l.lodging_usingInfo AS lodgingUsingInfo,
               l.lodging_notice AS lodgingNotice,
               l.lodging_address AS lodgingAddress,
               l.lodging_owner_name AS lodgingOwnerName,
               l.lodging_owner_number AS lodgingOwnerNumber,
               l.lodging_owner_email AS lodgingOwnerEmail,
               l.lodging_owner_id AS lodgingOwnerId,
               r.room_picture_1 AS roomPicture1
        FROM lodging l
                JOIN room r ON l.lodging_id = r.lodging_id
        WHERE l.lodging_id = #{lodgingId}
        LIMIT 1
    </select>


    <!--   전체 후기 리스트   -->
    <select id="allPostList" resultType="com.lec.spring.domain.Lodging">
        SELECT p.post_picture AS postPicture,
               p.post_text AS postText,
               p.post_grade AS postGrade,
               r.room_name AS roomName
        FROM post p
                 JOIN lodging l ON p.lodging_id = l.lodging_id
                 JOIN room r ON p.room_id = r.room_id
        WHERE p.lodging_id = #{lodgingId}
    </select>

    <select id="avgPostGrade" resultType="java.lang.Double">
        SELECT COALESCE(TRUNCATE(AVG(p.post_grade), 1), 0) AS avgPostGrade
        FROM post p
                 JOIN lodging l ON p.lodging_id = l.lodging_id
                 JOIN room r ON p.room_id = r.room_id
        WHERE p.lodging_id = #{lodgingId}
        LIMIT 1;
    </select>

    <select id="totalPosts" resultType="java.lang.Integer">
        SELECT COUNT(*) AS totalPosts
        FROM post p
        WHERE p.lodging_id = #{lodgingId};
    </select>

</mapper>