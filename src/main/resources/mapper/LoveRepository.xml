<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.LoveRepository">

    <!-- 모든 사용자의 좋아요 상태를 가져오는 쿼리 -->
    <select id="findAllUserLove" resultType="com.lec.spring.domain.Love">
        SELECT * FROM love
    </select>

    <!-- 모든 좋아요를 포함한 사용자를 가져오는 쿼리 -->
    <select id="findAllUserWithLove" resultType="com.lec.spring.domain.User">
        SELECT * FROM user WHERE user_id IN (SELECT user_id FROM love)
    </select>

    <!-- 좋아요를 추가하는 쿼리 -->
    <insert id="addLove">
        INSERT INTO love (lodging_id, user_id)
        VALUES (#{lodgingId}, #{userId})
    </insert>

    <select id="findLodgings" resultType="com.lec.spring.domain.Lodging">
        SELECT l.lodging_id AS lodgingId,
               l.lodging_picture_1 AS lodgingPicture1,
               l.lodging_name AS lodgingName,
               l.lodging_type AS lodgingType,
               l.lodging_address AS lodgingAddress,
               l.lodging_number AS lodgingNumber,
               lo.user_id AS userId
        FROM lodging l JOIN love lo ON l.lodging_id = lo.lodging_id
        WHERE lo.user_id = #{userId}
    </select>

    <!-- 좋아요를 삭제하는 쿼리 -->
    <delete id="removeLove">
        DELETE FROM love WHERE lodging_id = #{lodgingId} AND user_id = #{userId}
    </delete>

    <!-- 특정 사용자가 특정 숙소를 좋아요 했는지 확인하는 쿼리 -->
    <!-- 했다면 1 아니면 0 -->
    <select id="existsByUserIdAndLodgingId" resultType="boolean">
        SELECT COUNT(*) > 0 FROM love WHERE user_id = #{userId} AND lodging_id = #{lodgingId}
    </select>

</mapper>