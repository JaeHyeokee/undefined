<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.PostRepository">

    <sql id="SELECT_BASES">
        SELECT p.post_id AS postId,
        p.post_picture AS postPicture,
        p.post_text AS postText,
        p.post_grade AS postGrade,
        p.user_id AS userId,
        p.booking_id AS bookingId,
        p.lodging_id AS lodgingId,
        p.room_id AS roomId
        FROM post p
    </sql>

    <sql id="SELECT_BASE">
        SELECT p.post_id AS postId
        , p.post_picture AS postPicture
        , p.post_text AS postText
        , p.post_grade AS postGrade
        , u.user_id AS userId
        , b.booking_id AS bookingId
        , l.lodging_id AS lodgingId
        , ro.room_id AS roomId
        FROM
        post p, user u, booking b, lodging l, room ro
        WHERE
        p.user_id = u.user_id
        AND p.booking_id = b.booking_id
        AND l.lodging_id = ro.lodging_id
        AND p.room_id = ro.room_id
    </sql>

    <!--    후기 작성 쿼리-->
    <insert id="savePost" flushCache="true" parameterType="com.lec.spring.domain.Post" useGeneratedKeys="true" keyColumn="post_id" keyProperty="postId">
        INSERT INTO post
        (post_id, post_picture, post_text, post_grade,
        user_id, booking_id, lodging_id, room_id)
        VALUES
        (#{postId},#{postPicture}, #{postText}, #{postGrade},
        #{userId}, #{bookingId}, #{lodgingId}, #{roomId})
    </insert>

    <select id="countAllPostsByUserId" resultType="int">
        SELECT count(*)
        FROM post p
        WHERE user_id = #{user_id}
        AND post_id = #{post_id}
    </select>

    <!--    한 숙소에 작성된 후기들의 개수-->
    <select id="countAllPostsByLodgingId" resultType="int">
        SELECT count(*)
        FROM post p
        WHERE lodging_id = #{lodging_id}
    </select>

    <select id="findPostsByRoomId" resultType="com.lec.spring.domain.Post">
        <include refid="SELECT_BASE"/>
        AND ro.room_id = #{roomId}
    </select>

    <!--    숙소 상세, 객실 상세 페이지 안 후기-->
    <select id="findPostByLodgingId" resultType="com.lec.spring.domain.Post">
        SELECT r.room_name AS roomName,
        l.lodging_name AS lodgingName,
        l.lodging_picture_1 AS lodgingPicture1,
        l.lodging_type AS lodgingType,
        p.post_id AS postId,
        p.post_picture AS postPicture,
        p.post_text AS postText,
        p.post_grade AS postGrade,
        p.booking_id AS bookingId,
        p.lodging_id AS lodgingId,
        p.room_id AS roomId,
        CONCAT(LEFT(user_name, 1),'*', RIGHT(user_name, 1)) AS userName,
        u.user_nickname AS userNickname,
        b.startDate,
        b.endDate
        FROM post p
        JOIN lodging l ON p.lodging_id = l.lodging_id
        JOIN room r ON p.room_id = r.room_id
        JOIN user u ON p.user_id = u.user_id
        LEFT JOIN (
        SELECT booking_id, booking_startdate AS startDate, booking_enddate AS endDate
        FROM booking
        ) b ON p.booking_id = b.booking_id
        WHERE p.lodging_id = #{lodgingId}
    </select>

    <!--    후기 업데이트 쿼리-->
    <update id="postUpdate" flushCache="true" parameterType="com.lec.spring.domain.Post">
        UPDATE post
        SET post_picture = #{postPicture}
        , post_text = #{postText}
        , post_grade = #{postGrade}
        WHERE post_id = #{postId}
    </update>

    <!--    후기 삭제 쿼리-->
    <delete id="postDelete" flushCache="true" parameterType="com.lec.spring.domain.Post">
        DELETE FROM post WHERE post_id = #{postId}
    </delete>

    <!--    마이페이지에서 유저 id 값으로 자신이 작성한 후기 보는 쿼리-->
    <select id="postUserId" resultType="com.lec.spring.domain.Post">
        SELECT r.room_name AS roomName,
        l.lodging_name AS lodgingName,
        l.lodging_picture_1 AS lodgingPicture1,
        l.lodging_type AS lodgingType,
        p.post_id AS postId,
        p.post_picture AS postPicture,
        p.post_text AS postText,
        p.post_grade AS postGrade,
        p.user_id AS userId,
        p.booking_id AS bookingId,
        p.lodging_id AS lodgingId,
        p.room_id AS roomId,
        b.startDate,
        b.endDate
        FROM post p
        JOIN lodging l ON p.lodging_id = l.lodging_id
        JOIN room r ON p.room_id = r.room_id
        LEFT JOIN (
        SELECT booking_id, booking_startdate AS startDate, booking_enddate AS endDate
        FROM booking
        ) b ON p.booking_id = b.booking_id
        WHERE p.user_id = #{userId}
    </select>

    <!--    유저 id 값으로 거른 뒤 후기 id 값으로 한 번더 거르는 쿼리-->
    <select id="postUser" resultType="com.lec.spring.domain.Post">
        SELECT r.room_name AS roomName,
        l.lodging_name AS lodgingName,
        l.lodging_picture_1 AS lodgingPicture1,
        l.lodging_type AS lodgingType,
        p.post_id AS postId,
        p.post_picture AS postPicture,
        p.post_text AS postText,
        p.post_grade AS postGrade,
        p.user_id AS userId,
        p.booking_id AS bookingId,
        p.lodging_id AS lodgingId,
        p.room_id AS roomId,
        b.startDate,
        b.endDate
        FROM post p
        JOIN lodging l ON p.lodging_id = l.lodging_id
        JOIN room r ON p.room_id = r.room_id
        LEFT JOIN (
        SELECT booking_id, booking_startdate AS startDate, booking_enddate AS endDate
        FROM booking
        ) b ON p.booking_id = b.booking_id
        WHERE p.user_id = #{userId}
        AND p.post_id = #{postId}
    </select>

    <select id="checkIfUserPosted" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM post
        WHERE user_id = #{userId} AND booking_id = #{bookingId}
    </select>

    <!-- roomId와 관련된 post 삭제 -->
    <delete id="deletePostsByRoomId" parameterType="int">
        DELETE FROM post WHERE room_id = #{roomId}
    </delete>
</mapper>