<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.PostRepository">
    <insert id="createPost" flushCache="true" parameterType="com.lec.spring.domain.Post"
            useGeneratedKeys="true" keyColumn="post_id" keyProperty="postId">
        INSERT INTO post (post_picture, post_text, post_grade, user_id, reservation_id, lodging_id, room_id)
        VALUES (#{postPicture}, #{postText}, #{postGrade}, #{userId}, #{reservationId}, #{lodgingId}, #{roomId})
    </insert>

    <sql id="SELECT_BASE">
        SELECT p.post_id AS postId
             , p.post_picture AS postPicture
             , p.post_text AS postText
             , p.post_grade AS postGrade
             , u.user_id AS userId
             , re.reservation_id AS reservationId
             , l.lodging_id AS lodgingId
             , ro.room_id AS roomId
        FROM
            post p, user u, reservation re, lodging l, room ro
        WHERE
            p.user_id = u.user_id
        AND p.reservation_id = re.reservation_id
        AND l.lodging_id = ro.lodging_id
        AND p.room_id = ro.room_id
    </sql>

    <select id="countAllPostsByLodgingId" resultType="int">
        SELECT count(*)
        FROM post p
        WHERE lodging_id = #{lodging_id}
    </select>

    <select id="findPostsByRoomId" resultType="com.lec.spring.domain.Post">
        <include refid="SELECT_BASE"/>
        AND ro.room_id = #{roomId}
    </select>

    <update id="updatePost" flushCache="true" parameterType="com.lec.spring.domain.Post">
        UPDATE post
        SET post_picture = #{postPicture}
          , post_text = #{postText}
          , post_grade = #{postGrade}
        WHERE post_id = #{postId}
    </update>

    <delete id="deletePost" flushCache="true" parameterType="com.lec.spring.domain.Post">
        DELETE FROM post WHERE post_id = #{postId}
    </delete>
</mapper>