<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.BookingRepository">
    <!-- BASE -->
    <sql id="SELECT_BASE">
        SELECT b.booking_id AS bookingId
             , b.booking_time AS bookingTime
             , b.booking_adult AS bookingAdult
             , b.booking_child AS bookingChild
             , b.visitor_name AS visitorName
             , b.visitor_phonenum AS visitorPhoneNum
             , b.booking_pay AS bookingPay
             , b.booking_startdate AS bookingStartDate
             , b.booking_enddate AS bookingEndDate
             , r.room_id AS roomId
             , u.user_id AS userId
             , r.lodging_id AS lodgingId
        FROM
            booking b, room r, user u
        WHERE
            b.room_id = r.room_id
          AND b.user_id = u.user_id
    </sql>

    <!-- CREATE -->
    <insert id="save" flushCache="true" parameterType="com.lec.spring.domain.Booking"
            useGeneratedKeys="true" keyColumn="booking_id" keyProperty="bookingId">
        INSERT INTO booking
        (booking_adult, booking_child, visitor_name, visitor_phonenum
        , booking_pay, booking_startdate, booking_enddate, room_id, user_id)
        VALUES
            (#{bookingAdult}, #{bookingChild}, #{visitorName}, #{visitorPhoneNum}
            , #{bookingPay}, #{bookingStartDate}, #{bookingEndDate}, #{roomId}, #{userId})
    </insert>

    <!-- READ -->
    <!-- 객실에 대한 예약 내역 -->
    <select id="findBooksByRoomId" resultType="com.lec.spring.domain.Booking">
        <include refid="SELECT_BASE"/>
        AND b.room_id = #{roomId}
    </select>

    <!-- 유저에 대한 예약 내역 -->
    <select id="findBooksByUserId" resultType="com.lec.spring.domain.Booking">
        <include refid="SELECT_BASE"/>
        AND b.user_id = #{userId}
    </select>

    <!-- 예약한 후기 찾기위한 쿼리 -->
    <select id="findByBookingId" resultType="com.lec.spring.domain.Booking">
        <include refid="SELECT_BASE"/>
        AND b.booking_id = #{bookingId}
    </select>

    <!-- DELETE -->
    <delete id="deleteBooking">
        DELETE FROM booking
        WHERE user_id = #{userId} AND booking_id = #{bookingId}
    </delete>

    <!--    <select id="bookingCount" resultType="int">-->
    <!--        SELECT count(*)-->
    <!--        FROM booking-->
    <!--        WHERE room_id = #{roomId}-->
    <!--        AND ((booking_startdate &gt;> #{bookingStartDate} AND booking_startdate &lt;< #{bookingEndDate})-->
    <!--        OR (booking_enddate &lt; #{bookingEndDate} AND booking_enddate &gt; #{bookingStartDate}))-->
    <!--    </select>-->

    <select id="bookingCount" resultType="int">
        SELECT count(*)
        FROM booking
        WHERE room_id = #{roomId}
          AND NOT (booking_startdate &gt;= #{bookingEndDate}
            OR booking_enddate &lt;= #{bookingStartDate})
    </select>

<!--    &lt;!&ndash; 한 숙소에 예약된 예약 개수&ndash;&gt;-->
<!--    <select id="countHotelBooking" resultType="int">-->
<!--        SELECT-->
<!--            l.lodging_id 숙소고유번호,-->
<!--            l.lodging_name 숙소이름,-->
<!--            COUNT(b.booking_id ) AS 예약숫자-->
<!--        FROM-->
<!--            lodging l-->
<!--                LEFT JOIN-->
<!--            room r ON l.lodging_id = r.lodging_id-->
<!--                LEFT JOIN-->
<!--            booking b ON r.room_id = b.room_id-->
<!--        GROUP BY-->
<!--            l.lodging_id, l.lodging_name-->
<!--        ORDER BY-->
<!--            예약숫자 DESC;-->
<!--    </select>-->

    <!-- roomId와 관련된 booking 삭제 -->
    <delete id="deleteBookingsByRoomId" parameterType="int">
        DELETE FROM booking WHERE room_id = #{roomId}
    </delete>
</mapper>